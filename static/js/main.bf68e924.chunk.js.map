{"version":3,"sources":["Expectations.js","serviceWorker.js","index.js"],"names":["defaultAge","maxAge","formatAge","age","Math","round","formatPercent","p","resolution","Expectations","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setCountry","state","country","updateDistribution","stateUpdate","updatedState","objectSpread","ps","tableCache","sex","slice","meanAtBirth","map","i","reduce","a","b","mean","distribution","description","killedOff","setState","setAge","event","parseInt","target","value","isNaN","localStorage","setItem","setSex","fetch","then","response","ok","headers","get","startsWith","text","console","log","string","split","parseFloat","cacheAddition","hideModal","showModal","getItem","sexOptions","label","react_default","createElement","Modal_default","show","style","modalStyle","AgeInput","onChange","Button_default","variant","onClick","className","Expectations_Skellie","Expectations_ExpectationsGraph","currentAge","react_select_browser_esm","defaultValue","options","isClearable","maxWidth","Expectations_CountrySelect","href","src","alt","title","React","Component","type","min","max","CountrySelect","_this2","json","countries","_this3","find","el","position","width","zIndex","top","left","border","backgroundColor","boxShadow","padding","ExpectationsGraph","_this4","survivedData","x","y","remaningData","cumulative","cs","next","push","length","total","deathData","c","meanP","floor","ceil","meanData","labelComponent","victory_tooltip","dy","datum","flyoutComponent","Expectations_LineFlyout","victory_label","fontSize","flyoutStyle","fill","deathStyle","data","stroke","strokeWidth","victory_chart","minDomain","containerComponent","victory_voronoi_container","victory_axis","axis","dependentAxis","tickLabels","victory_area","labels","victory_line","LineFlyout","_this$props","height","cx","cy","r","Skellie","_this5","dead","random","_this6","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_Expectations","document","getElementById","URL","process","origin","addEventListener","concat","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bf68e924.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nimport Select from 'react-select'\n\nimport { VictoryArea, VictoryAxis, VictoryChart, VictoryLabel, VictoryLine, VictoryTooltip, VictoryVoronoiContainer} from 'victory';\n\nimport './App.css';\n\n// data:\n// great quality (full tables) but only 40 countries: https://www.mortality.org/\n// world bank csv, life expectancy at birth 1960-2016 as CSV: https://data.worldbank.org/indicator/sp.dyn.le00.in\n// gapminder, life expectancy at birth 1800-2016/8 as CSV (full country name): https://www.gapminder.org/data/\n// WHO life expectancy and life tables: http://apps.who.int/gho/data/node.main.686?lang=en\n//  * life expectancy (by region and sex only): http://apps.who.int/gho/data/view.main.SDG2016LEXREGv?lang=en\n//  * life tables (per country): http://apps.who.int/gho/data/node.main.LIFECOUNTRY?lang=en (get \"CSV - table\" file)\n// UN life expectancy at birth 1950-2100 (per gender): http://data.un.org/Search.aspx?q=life+expectancy\n// ourworldindata.org nice combination of UN above and Clio-Infra til 1949, but no gender: https://ourworldindata.org/grapher/life-expectancy (click 'data')\n// clio-infra (life expectancy at birth by gender and country but only ever 10ish years): https://clio-infra.eu/Indicators/FemalelifeExpectancyatBirth.html\n// under the assumption: http://www.lifeexpectancy.org/lifetable.shtml\n\nconst defaultAge = 25;\nconst maxAge = 85;\n\nfunction formatAge(age) {\n  return Math.round(10 * age) / 10;\n}\n\nfunction formatPercent(p) {\n  var resolution = 10;\n  if (p < .001) {\n    return \"< 0.01%\";\n  } else if (p > .9999) {\n    return \"> 99.99%\";\n  } else if (p < .01 || p > .99) {\n    resolution = 100;\n  }\n  return Math.round(100*resolution*p)/resolution + \"%\";\n}\n\n\nclass Expectations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tableCache: {},\n      age: parseInt(localStorage.getItem('age')) || defaultAge,\n      sex: localStorage.getItem('sex') || 0,\n      country: localStorage.getItem('country') || 'global',\n      showModal: ! localStorage.getItem('age'),\n      mean: 0 // avoid error on first render\n    };\n  }\n\n  componentDidMount = () => {\n    this.setCountry(this.state.country);\n  }\n\n  updateDistribution = (stateUpdate) => {\n    let updatedState = {...this.state, ...stateUpdate};\n    var countryData = updatedState.tableCache[updatedState.country];\n    var ps = countryData[updatedState.sex].slice();\n    var meanAtBirth = formatAge(ps.map((p, i) => p * i).reduce((a, b) => a + b));\n\n    // weighted mean of years still to be lived\n    var mean = ps.slice(updatedState.age).map((p, i) => p * (updatedState.age + i)).reduce((a, b) => a + b);\n    mean = mean / ps.slice(updatedState.age).reduce((a, b) => a + b);\n//    var mean = dist.map(d => d.x * d.y ).reduce((a, b) => a + b);\n\n    var description = \"your demographic group\";\n    updatedState = {...updatedState, ...{\n      distribution: ps,\n      mean: mean,\n      meanAtBirth: meanAtBirth,\n      description: description,\n      killedOff: ps.slice(0, updatedState.age).reduce((a, b) => a + b, 0) / ps.reduce((a, b) => a + b)\n    }};\n\n    this.setState(updatedState);\n  }\n\n  setAge = (event) => {\n    var age = parseInt(event.target.value);\n    if (age < 0 || age > maxAge) {\n      return;\n    } else if (isNaN(age)) {\n//      this.setState({age: ''});\n      return; // FIXME\n    }\n    this.updateDistribution({ 'age': age });\n    localStorage.setItem('age', age);\n  }\n\n  setSex = (event) => {\n    const sex = event ? event.value : 0;\n    this.updateDistribution({'sex': sex});\n    localStorage.setItem('sex', sex);\n  }\n\n  setCountry = (event) => {\n    var country = \"global\";\n    if (event) {\n      country = event.value || event;\n    }\n    if (!this.state.tableCache[country]) {\n      fetch('data/' + country + '.csv').then((response) => {\n        if (response.ok && response.headers.get('Content-Type').startsWith('text/csv')) {\n          return response.text();\n        } else {\n          console.log(\"Failed to fetch \" + country);\n        }\n      })\n      .then((string) => {\n        if (string) {\n          var ps = string.split(\"\\n\").map((string) => string.split(' ').map(parseFloat));\n          var cacheAddition = {};\n          cacheAddition[country] = ps;\n          this.updateDistribution({ country: country, tableCache: cacheAddition })\n        }\n      });\n    } else {\n      this.updateDistribution({ country: country });\n    }\n    localStorage.setItem('country', country);\n  }\n\n  hideModal = () => {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    const sexOptions = [ { value: 1, label: 'female' }, { value: 2, label: 'male' } ];\n    return (\n      <div>\n        <Modal show={this.state.showModal} style={modalStyle()}>\n          <h2>how old are you?</h2>\n          <AgeInput age={this.state.age} onChange={this.setAge} />\n          <Button variant=\"primary\" onClick={this.hideModal} />\n        </Modal>\n        <div className=\"content\">\n          <header>\n            <Skellie /><Skellie /><Skellie /><Skellie /><Skellie /><Skellie />\n          </header>\n          <p>\n            life expectancy is a demographic measure that is often used to capture the general health and wealth of a population. but what does it mean for <em>you</em> that the average life expectancy for {this.state.description} is {formatAge(this.state.meanAtBirth)} years?\n          </p>\n          <h2>all is not so bad!</h2>\n          <p>\n            while the average life expectancy at birth of your demographic group was {formatAge(this.state.meanAtBirth)}, by managing to stay alive to this day you have already proven that you are not part of the <strong>{formatPercent(this.state.killedOff)}</strong> of people from your population who die before they even reach age {this.state.age}. well done!</p>\n          <p>with the knowledge that you haven't died yet, we can re-calculate your individual life expectancy and find out that it is now actually higher than it was at your birth, namely <strong>{formatAge(this.state.mean)}</strong>&nbsp;years. what a treat.\n          </p>\n          <h2>all is not so good!</h2>\n          <p>\n            while you might <em>on average</em> still have another {formatAge(this.state.mean - this.state.age)} years to live, not everybody lives exactly that long of course. rather, your own personal remaining life span will be randomly drawn from a statistical distribution, of which the average life expectancy is just a very crude measure.</p>\n          <p>\n            to give you a better grasp of how much you should really be fearing for your life and when, please refer to the life expectancy distribution personalised for your circumstances below. enjoy!\n          </p>\n          <ExpectationsGraph currentAge={this.state.age} distribution={this.state.distribution} mean={this.state.mean} />\n          <h3>change demographic features</h3>\n          <div className=\"parameters\">\n            <AgeInput age={this.state.age} onChange={this.setAge} />\n            <label className=\"sex\">\n              <Select defaultValue={sexOptions[this.state.sex]} onChange={this.setSex} options={sexOptions} isClearable={true} style={{ maxWidth: \"10em\" }} />\n            </label>\n            <div className=\"country\"><CountrySelect value={this.state.country} onChange={this.setCountry} /></div>\n          </div>\n          <footer>\n            <p>built in 2019 by <a href=\"http://kevinstadler.github.io\">Kevin Stadler</a>, data by the <a href=\"https://www.lifetable.de\">human life table database</a>.</p>\n            <p>realised you can't possibly spend all of your accumulated fortune in this lifetime? send me your money: <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=2JE6FCBYY94LJ\"><img src=\"https://img.shields.io/badge/donate-paypal%20($)-blue.svg\" alt=\"donate US dollars\" title=\"send me your money\" /></a> <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WKKFFM6D7ZHEE\"><img src=\"https://img.shields.io/badge/donate-paypal%20(%E2%82%AC)-blue.svg\" alt=\"donate euros\" title=\"send me your money\" /></a></p></footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Expectations;\n\n\nfunction AgeInput (props) {\n  return (<div><input className=\"age\" type=\"number\" min=\"0\" max={maxAge} value={props.age} onChange={props.onChange} /></div>);\n}\n\nclass CountrySelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { countries: [] };\n  }\n\n  componentDidMount = () => {\n      fetch(\"countries.json\").then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          console.log(\"Failed to fetch countries information\");\n        }\n      }).then((json) => {\n        this.setState({countries: json});\n      }\n    );\n  }\n\n  render() {\n    return (<Select\n      options={this.state.countries}\n      defaultValue={this.state.countries.find((el) => el.value === this.props.value)}\n      onChange={this.props.onChange}\n      isClearable={true} />);\n  }\n}\n\nconst modalStyle = function() {\n  // we use some psuedo random coords so nested modals\n  // don't sit right on top of each other.\n  return {\n    position: 'fixed',\n    width: 400,\n    zIndex: 1040,\n    top: '50%',\n    left: '50%',\n    border: '1px solid #e5e5e5',\n    backgroundColor: 'white',\n    boxShadow: '0 5px 15px rgba(0,0,0,.5)',\n    padding: 20\n  };\n};\n\nclass ExpectationsGraph extends React.Component {\n\n  render() {\n    if (!this.props.distribution) {\n      return null;\n    }\n\n    var survivedData = this.props.distribution.slice(0, this.props.currentAge + 0).map((p, i) => { return { x: i, y: p }});\n\n    var remaningData = this.props.distribution.slice(this.props.currentAge);\n    var cumulative = remaningData.slice(1).reduce((cs, next) => { cs.push(cs[cs.length - 1] + next); return cs }, [ remaningData[0] ]);\n    var total = cumulative[cumulative.length - 1];\n    var deathData = remaningData.map((p, i) => { return { x: this.props.currentAge + i, y: p, c: cumulative[i] / total } });\n\n    var meanP = this.props.distribution[Math.floor(this.props.mean)] +\n      (this.props.mean % 1.0) *\n      (this.props.distribution[Math.ceil(this.props.mean)] - this.props.distribution[Math.floor(this.props.mean)]);\n    // generate lots of points along vertical line to improve voronoi\n    var meanData = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(i => {return { x: this.props.mean, y: meanP * i/10 }});\n\n    var labelComponent = (<VictoryTooltip\n            dy={(datum) => datum.y }\n            flyoutComponent={<LineFlyout />}\n            labelComponent={<VictoryLabel style={{ fontSize: 11 }} />}\n            flyoutStyle={{fill: \"white\"}} />);\n    var deathStyle = { data: { stroke: \"black\", strokeWidth: 1, fill: \"#eee\" } };\n\n    return (\n      <VictoryChart\n        minDomain={{ x: 0, y: 0 }}\n        containerComponent={\n          // use Voronoi Container to enabel tooltip on line chart\n          <VictoryVoronoiContainer\n//            style={{  overflow: 'visible' }}}\n            className=\"chart\"\n//            voronoiDimension=\"x\"\n            />\n        // TODO add padding\n        }>\n        <VictoryAxis\n          label=\"age\"\n          style={{ axis: {strokeWidth: 0} }} />\n        <VictoryAxis\n          dependentAxis\n          label=\"probability of dying at that age\"\n//          offsetX={50}\n// TODO fix opacity\n          style={{ axis: {stroke: \"lightgray\", strokeWidth: 1.5}, tickLabels: { fill: \"none\" } }} />\n\n        <VictoryArea\n          data={deathData}\n          style={deathStyle}\n          labelComponent={labelComponent}\n          labels={(datum) => \"probability that you will\\ndie before you turn \" + (datum.x + 1) + \":\\n\" + formatPercent(datum.c) }\n          />\n        <VictoryLine\n          data={[ {x: this.props.currentAge, y: 0 } , deathData[0]]}\n          style={deathStyle}\n          labelComponent={labelComponent} // TODO fix label position\n          labels={() => \"you are \" + this.props.currentAge + \" now.\\nprobability that you will\\ndie this year: \" + formatPercent(deathData[0].y)}\n          />\n\n        <VictoryLine\n          data={survivedData}\n          style={{ data: { stroke: \"darkgray\", strokeWidth: 1 } }}\n          labelComponent={<VictoryTooltip\n            dy={(datum) => datum.y+10 }\n            flyoutComponent={<LineFlyout />}\n            style={{ fontSize: 11 }} />} // TODO set position\n          labels={(datum) => \"you didn't die when you were \" + datum.x + \",\\nunlike \" + formatPercent(datum.y) + \" of other people\\nfrom your cohort. well done!\"}\n          />\n\n        <VictoryLine\n          data={meanData}\n          style={{ data: { strokeWidth: 1, stroke: \"red\", fill: \"#eee\" } }}\n          labelComponent={<VictoryTooltip style={{ fontSize: 11 }} />} // TODO set position\n          labels={() => \"average expected lifetime\\nfor somebody aged \" + this.props.currentAge + \":\\n\" + formatAge(this.props.mean) + \" years\"}\n          />\n      </VictoryChart>\n      );\n  }\n}\n\nclass LineFlyout extends React.Component {\n  render() {\n    const {x, y} = this.props;\n    // model after https://github.com/FormidableLabs/victory/blob/master/packages/victory-tooltip/src/flyout.js#L27\n    const width = 170;\n    const height = 50;\n    return (\n      <g>\n        <rect x={x-0.5} y={y+10} width=\"1\" height={Math.max(0, 250-y-10)} fill=\"black\" />\n        <circle cx={x} cy={y+10} r=\"2\" fill=\"black\"/>\n        <rect x={x-width/2} y={y-45-height/2} width={width} height={height} stroke=\"black\" fill=\"white\" />\n      </g>\n    );\n  }\n}\n\nclass Skellie extends React.Component {\n  constructor() {\n    super();\n    this.state = { dead: Math.random() >= 0.5 };\n  }\n\n  render() {\n    return (<img className=\"skellie\" alt=\"a graphic reminder of your mortality\" title=\"what do you expect?\" src={this.state.dead + \".png\"} onClick={() => this.setState({ dead: !this.state.dead }) } />);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Expectations from './Expectations';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Expectations />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}