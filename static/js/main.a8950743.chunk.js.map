{"version":3,"sources":["Expectations.js","serviceWorker.js","index.js"],"names":["sexOptions","value","label","formatAge","age","Math","round","formatPercent","p","resolution","Expectations","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setCountry","state","country","updateDistribution","stateUpdate","updatedState","objectSpread","countryData","tableCache","sexIndex","findIndex","el","sex","ps","slice","meanAtBirth","map","i","reduce","a","b","reverse","maxAge","length","v","totalremainingdensity","mean","impendingDeath","yearsToGo","factlet","react_default","createElement","abs","distribution","description","killedOff","setState","window","location","hash","setAge","event","localStorage","setItem","setSex","fetch","then","response","ok","headers","get","startsWith","text","console","log","string","split","parseFloat","cacheAddition","hideModal","showModal","toggleContactForm","e","preventDefault","contactFormVisible","getItem","args","substring","parseInt","isNaN","Modal","className","isOpen","Expectations_Skellie","AgeInput","onChange","Button","color","onClick","Expectations_ExpectationsGraph","currentAge","UncontrolledPopover","trigger","placement","target","PopoverBody","href","id","SexInput","Expectations_CountrySelect","Popover","Form","Input","type","name","placeholder","disabled","src","alt","title","React","Component","options","Array","apply","Number","react_select_browser_esm","isClearable","find","CountrySelect","_this2","json","countries","_this3","ExpectationsGraph","_this4","survivedData","x","y","outlived","remaningData","cumulative","cs","next","push","total","deathData","c","meanP","floor","ceil","meanData","labelComponent","victory_tooltip","dy","datum","flyoutComponent","Expectations_LineFlyout","victory_label","style","fontSize","flyoutStyle","fill","deathStyle","data","stroke","strokeWidth","victory_chart","minDomain","containerComponent","victory_voronoi_container","victory_axis","axis","dependentAxis","tickLabels","victory_line","labels","victory_area","LineFlyout","_this$props","width","height","max","cx","cy","r","Skellie","_this5","dead","random","_this6","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_Expectations","document","getElementById","URL","process","origin","addEventListener","concat","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a8950743.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Button, Form, FormGroup, Input, Label, Modal, Popover, PopoverHeader, PopoverBody, UncontrolledPopover } from 'reactstrap';\n\nimport Select from 'react-select'\n\nimport { VictoryArea, VictoryAxis, VictoryChart, VictoryLabel, VictoryLine, VictoryTooltip, VictoryVoronoiContainer} from 'victory';\n\nimport './App.css';\n\n// data:\n// great quality (full tables) but only 40 countries: https://www.mortality.org/\n// world bank csv, life expectancy at birth 1960-2016 as CSV: https://data.worldbank.org/indicator/sp.dyn.le00.in\n// gapminder, life expectancy at birth 1800-2016/8 as CSV (full country name): https://www.gapminder.org/data/\n// WHO life expectancy and life tables: http://apps.who.int/gho/data/node.main.686?lang=en\n//  * life expectancy (by region and sex only): http://apps.who.int/gho/data/view.main.SDG2016LEXREGv?lang=en\n//  * life tables (per country): http://apps.who.int/gho/data/node.main.LIFECOUNTRY?lang=en (get \"CSV - table\" file)\n// UN life expectancy at birth 1950-2100 (per gender): http://data.un.org/Search.aspx?q=life+expectancy\n// ourworldindata.org nice combination of UN above and Clio-Infra til 1949, but no gender: https://ourworldindata.org/grapher/life-expectancy (click 'data')\n// clio-infra (life expectancy at birth by gender and country but only ever 10ish years): https://clio-infra.eu/Indicators/FemalelifeExpectancyatBirth.html\n// under the assumption: http://www.lifeexpectancy.org/lifetable.shtml\n\nconst sexOptions = [ { value: 'F', label: 'female' }, { value: 'M', label: 'male' } ];\n\nfunction formatAge(age) {\n  return Math.round(10 * age) / 10;\n}\n\nfunction formatPercent(p) {\n  var resolution = 10;\n  if (p < .0001) {\n    return \"< 0.01%\";\n  } else if (p > .9999) {\n    return \"> 99.99%\";\n  } else if (p < .01 || p > .99) {\n    resolution = 100;\n  }\n  return Math.round(100 * resolution * p) / resolution + \"%\";\n}\n\n\nclass Expectations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var age = localStorage.getItem('age');\n    var sex = localStorage.getItem('sex');\n    var country = localStorage.getItem('country');\n\n    if (window.location.hash.length) {\n      const args = window.location.hash.substring(1).split('/');\n      if (args.length == 3) {\n        age = args[0];\n        sex = args[1];\n        country = args[2];\n      }\n    }\n\n    age = parseInt(age);\n\n    this.state = {\n      contactFormVisible: false,\n      tableCache: {},\n      age: isNaN(age) ? 25 : age,\n      sex: sex || 0,\n      country: country || 'world',\n      showModal: window.location.hash.length == 0,\n      // avoid errors on first render\n      mean: 0,\n      meanAtBirth: 0\n    };\n  }\n\n  componentDidMount = () => {\n    this.setCountry({ value: this.state.country });\n  }\n\n  updateDistribution = (stateUpdate) => {\n    let updatedState = {...this.state, ...stateUpdate};\n    var countryData = updatedState.tableCache[updatedState.country];\n    const sexIndex = sexOptions.findIndex((el) => el.value === updatedState.sex) + 1 || 0;\n    updatedState.sex = updatedState.sex ? sexOptions[updatedState] : '';\n    var ps = countryData[sexIndex].slice();\n    var meanAtBirth = formatAge(ps.map((p, i) => p * i).reduce((a, b) => a + b));\n\n    // find last non-zero death probability\n    ps.reverse();\n    const maxAge = ps.length - 1 - ps.findIndex(v => v > 0)\n    ps.reverse();\n\n    var totalremainingdensity = ps.slice(updatedState.age).reduce((a, b) => a + b);\n\n    if (totalremainingdensity == 0) {\n      // limit age to highest category of distribution\n      updatedState.age = maxAge;\n      totalremainingdensity = ps.slice(updatedState.age).reduce((a, b) => a + b);\n    }\n\n    // weighted mean of years still to be lived\n    var mean = ps.slice(updatedState.age).map((p, i) => p * (updatedState.age + i)).reduce((a, b) => a + b);\n    mean = mean / totalremainingdensity;\n\n    var impendingDeath = ps[updatedState.age];\n    // find upcoming number of years until probability of death exceeds 1% (ish)\n    for (var yearsToGo = 1; impendingDeath / totalremainingdensity < 0.008; yearsToGo++) {\n      impendingDeath += ps[updatedState.age + yearsToGo];\n    }\n    // normalise\n    impendingDeath = impendingDeath / totalremainingdensity;\n    var factlet = '';\n    if (yearsToGo == 1) {\n      factlet = <span>a <strong>{formatPercent(impendingDeath)}</strong> chance that you will die <strong>within the next year</strong>.</span>;\n    } else if (Math.abs(impendingDeath - 0.01) < .0025) {\n      factlet = <span>a 1 in 100 chance that you will already die <strong>within the next {yearsToGo} years</strong> of your life!</span>;\n    } else {\n      factlet = <span>a <strong>{formatPercent(impendingDeath)}</strong> chance that you will already die within the next {yearsToGo} years of your life!</span>;\n    }\n\n    var description = \"your demographic group\";\n    updatedState = {...updatedState, ...{\n      distribution: ps,\n      mean: mean,\n      meanAtBirth: meanAtBirth,\n      factlet: factlet,\n      maxAge: maxAge,\n      description: description,\n      killedOff: ps.slice(0, updatedState.age).reduce((a, b) => a + b, 0) / ps.reduce((a, b) => a + b)\n    }};\n\n    this.setState(updatedState);\n    window.location.hash = '#' + updatedState.age + '/' + (updatedState.sex || '') + '/' + updatedState.country;\n  }\n\n  setAge = (event) => {\n    var age = event.value;\n    this.updateDistribution({ 'age': age });\n    localStorage.setItem('age', age);\n  }\n\n  setSex = (event) => {\n    const sex = event ? event.value : '';\n    this.updateDistribution({ 'sex': sex });\n    localStorage.setItem('sex', sex);\n  }\n\n  setCountry = (event) => {\n    const country = event ? event.value : \"world\";\n    if (!this.state.tableCache[country]) {\n      fetch('data/' + country + '.csv').then((response) => {\n        if (response.ok && response.headers.get('Content-Type').startsWith('text/csv')) {\n          return response.text();\n        } else {\n          console.log(\"Failed to fetch \" + country);\n          // TODO unset country\n        }\n      })\n      .then((string) => {\n        if (string) {\n          var ps = string.split(\"\\n\").map((string) => string.split(' ').map(parseFloat));\n          var cacheAddition = {};\n          cacheAddition[country] = ps;\n          this.updateDistribution({ country: country, tableCache: cacheAddition })\n        }\n      });\n    } else {\n      this.updateDistribution({ country: country });\n    }\n    localStorage.setItem('country', country);\n  }\n\n  hideModal = () => {\n    this.setState({ showModal: false });\n  }\n\n  toggleContactForm = (e) => {\n    if (e !== null) {\n      e.preventDefault();\n    }\n    this.setState({ contactFormVisible: ! this.state.contactFormVisible });\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal className=\"firstvisit-dialog\" isOpen={this.state.showModal}>\n        <Skellie /><Skellie /><Skellie /><Skellie /><Skellie /><Skellie />\n          <h2>how old are you?</h2>\n          <AgeInput value={this.state.age} onChange={this.setAge} />\n          <p className=\"mobile\">NOTE: it looks like you are visiting this website on a touchscreen device. while the website is just as informative when viewed from a phone or tablet, you will find it a lot more entertaining to play with if you access it from a computer with a mouse or trackpad instead.</p>\n          <Button color=\"secondary\" onClick={this.hideModal}>I am prepared to look death in the eye</Button>\n        </Modal>\n        <div className=\"content\">\n          <header>\n            <Skellie /><Skellie /><Skellie /><Skellie /><Skellie /><Skellie />\n          </header>\n          <p>\n            <em>life expectancy</em> is a measure that is often used to capture the general health and wealth of a country or population group. but what does it mean for <em>you</em> that your average life expectancy is <strong>{formatAge(this.state.meanAtBirth)}</strong> years?\n          </p>\n          <h2>all is not so bad!</h2>\n          <p>\n            while your average life expectancy at birth was {formatAge(this.state.meanAtBirth)}, by managing to stay alive until the age of {this.state.age} you have already proven that you are not part of the <strong>{formatPercent(this.state.killedOff)}</strong> of people from your population who die before they even make it to that age. well done!</p>\n          <p>with the knowledge that you haven't died yet, we can re-calculate your individual life expectancy and find out that it is now actually higher than it was at your birth, namely <strong>{formatAge(this.state.mean)}</strong>&nbsp;years. what a treat.\n          </p>\n          <h2>all is not so good!</h2>\n          <p>\n            your new average life expectancy might sound pretty high to you, but it is actually very unlikely that you will live to exactly that age. rather, your own personal remaining life span will be randomly drawn from a statistical distribution, of which the average life expectancy is just a very crude measure.</p>\n          <p>so while it might be another {formatAge(this.state.mean - this.state.age)} years until you reach your average life expectancy, there is also {this.state.factlet}</p>\n          <p>\n            to get an even better grasp of how much you should really be fearing for your life and when, you can explore the probable-age-of-death distribution below, which you can further tailor to your own personal circumstances. enjoy!\n          </p>\n          <ExpectationsGraph currentAge={this.state.age} distribution={this.state.distribution} mean={this.state.mean} />\n          <UncontrolledPopover trigger=\"focus\" placement=\"top\" target=\"infobutton\">\n            <PopoverBody>\n              <p>because the quality and resolution of mortality data varies from country to country, you might see some things in this distribution which will not seem right to you. if there's weird abrupt jumps in the data, this is probably due to the low quality of the underlying data. you might also see unusually straight lines in the distributions: this is because many countries (particularly developing ones) only know the probability of death per 5 or even 15-year interval, so i've had to employ some (probability-preserving) smoothing to generate some rough approximations of the probable underlying distributions.</p>\n              <p>the limitations on available countries and binary sex are also a result of the data collection by the <a href=\"https://www.who.int/gho/mortality_burden_disease/life_tables/life_tables/en/\">WHO</a>, who all of the data shown here eventually goes back to.</p>\n            </PopoverBody>\n          </UncontrolledPopover>\n          <h3>change demographic features <Button id=\"infobutton\" color=\"secondary\">?</Button></h3>\n\n          <div className=\"parameters\">\n            <AgeInput value={this.state.age} maxAge={this.state.maxAge} onChange={this.setAge} />\n            <label className=\"sex\">\n              <SexInput value={this.state.sex} onChange={this.setSex} />\n            </label>\n            <div className=\"country\"><CountrySelect value={this.state.country} onChange={this.setCountry} /></div>\n          </div>\n          <footer>\n            <p>built in 2019 by <a href=\"http://kevinstadler.github.io\">Kevin Stadler</a>, data by the <a href=\"https://www.lifetable.de\">human life table database</a>.</p>\n            <Popover placement=\"top\" target=\"contact\" isOpen={this.state.contactFormVisible}>\n              <PopoverBody>\n                <Form>\n                  <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"name\" />\n                  <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"e-mail\" />\n                  <Input type=\"textarea\" name=\"text\" id=\"contacttext\" placeholder=\"your message\" />\n                  <Button disabled>under construction</Button>\n                </Form>\n              </PopoverBody>\n            </Popover>\n\n            <p>comments, questions, suggestions? <a href=\"https://kevinstadler.github.io/#contact\" id=\"contact\">contact me</a> before it's too late.</p>\n            <p>realized you can't possibly spend all of your accumulated fortune in this lifetime? send me your money: <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=2JE6FCBYY94LJ\"><img src=\"https://img.shields.io/badge/donate-paypal%20($)-lightgray.svg\" alt=\"donate US dollars\" title=\"send me your money\" /></a> <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WKKFFM6D7ZHEE\"><img src=\"https://img.shields.io/badge/donate-paypal%20(%E2%82%AC)-lightgray.svg\" alt=\"donate euros\" title=\"send me your money\" /></a></p></footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Expectations;\n\nfunction AgeInput (props) {\n  const options = Array.apply(null, { length: props.maxAge || 110 }).map(Number.call, Number).map(i => { return { value: i, label: i }});\n  return (<Select\n    className=\"age\"\n    options={options}\n    onChange={props.onChange}\n    value={options[props.value]}\n    isClearable={false}\n  />);\n}\n\nfunction SexInput (props) {\n  return (<Select\n    className=\"age\"\n    options={sexOptions}\n    onChange={props.onChange}\n    value={ sexOptions.find((el) => el.value === props.value) }\n    isClearable={true}\n  />);\n}\n\nclass CountrySelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { countries: [] };\n  }\n\n  componentDidMount = () => {\n      fetch(\"countries.json\").then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          console.log(\"Failed to fetch countries information\");\n        }\n      }).then((json) => {\n        this.setState({countries: json});\n      }\n    );\n  }\n\n  render() {\n    return (<Select\n      options={this.state.countries}\n      onChange={this.props.onChange}\n      value={this.state.countries.find((el) => el.value === this.props.value)}\n      isClearable={true}\n      placeholder=\"Select country...\"\n      />);\n  }\n}\n\nclass ExpectationsGraph extends React.Component {\n\n  render() {\n    if (!this.props.distribution) {\n      return null;\n    }\n\n    var survivedData = this.props.distribution.slice(0, this.props.currentAge + 1).map((p, i) => { return { x: i, y: p }});\n    const outlived = this.props.distribution.slice(0, this.props.currentAge).reduce((a, b) => a + b);\n\n    var remaningData = this.props.distribution.slice(this.props.currentAge);\n    var cumulative = remaningData.slice(1).reduce((cs, next) => { cs.push(cs[cs.length - 1] + next); return cs }, [ remaningData[0] ]);\n    var total = cumulative[cumulative.length - 1];\n    var deathData = remaningData.map((p, i) => { return { x: this.props.currentAge + i, y: p, c: cumulative[i] / total } });\n\n    var meanP = this.props.distribution[Math.floor(this.props.mean)] +\n      (this.props.mean % 1.0) *\n      (this.props.distribution[Math.ceil(this.props.mean)] - this.props.distribution[Math.floor(this.props.mean)]);\n    // generate lots of points along vertical line to improve voronoi\n    var meanData = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(i => {return { x: this.props.mean, y: meanP * i/10 }});\n\n    var labelComponent = (<VictoryTooltip\n            dy={(datum) => datum.y }\n            flyoutComponent={<LineFlyout />}\n            labelComponent={<VictoryLabel style={{ fontSize: 11 }} />}\n            flyoutStyle={{fill: \"white\"}} />);\n    var deathStyle = { data: { stroke: \"black\", strokeWidth: 1, fill: \"#eee\" } };\n\n    return (\n      <VictoryChart\n        minDomain={{ x: 0, y: 0 }}\n        containerComponent={\n          // use Voronoi Container to enable tooltip on line chart\n          <VictoryVoronoiContainer\n//            style={{  overflow: 'visible' }}}\n            className=\"chart\"\n//            voronoiDimension=\"x\"\n            />\n        }>\n        <VictoryAxis\n          label=\"age\"\n          style={{ axis: {strokeWidth: 0} }} />\n        <VictoryAxis\n          dependentAxis\n          label=\"probability of dying at that age\"\n//          offsetX={50}\n// TODO fix opacity\n          style={{ axis: {stroke: \"lightgray\", strokeWidth: 1.5}, tickLabels: { fill: \"none\" } }} />\n\n        <VictoryLine\n          data={survivedData}\n          style={{ data: { stroke: \"darkgray\", strokeWidth: 1 } }}\n          labelComponent={<VictoryTooltip\n            dy={(datum) => datum.y+10 }\n            flyoutComponent={<LineFlyout />}\n            style={{ fontSize: 11 }} />} // TODO set position\n          labels={(datum) => \"you didn't die when you were \" + datum.x + \",\\nunlike \" + formatPercent(datum.y) + \" of other people\\nfrom your cohort. well done!\"}\n          />\n\n        <VictoryArea\n          data={deathData}\n          style={deathStyle}\n          labelComponent={labelComponent}\n          labels={(datum) => \"probability that you will\\ndie before you turn \" + (datum.x + 1) + \":\\n\" + formatPercent(datum.c) }\n          />\n        <VictoryLine\n          data={[ {x: this.props.currentAge, y: 0 } , deathData[0]]}\n          style={deathStyle}\n          labelComponent={labelComponent} // TODO fix label position\n          labels={() => \"unlike \" + formatPercent(outlived) +  \" of your cohort who have already\\ndied, you survived up to the age of \" + this.props.currentAge + \".\\nprobability that you will die this year: \" + formatPercent(deathData[0].y)}\n          />\n\n        <VictoryLine\n          data={meanData}\n          style={{ data: { strokeWidth: 1, stroke: \"red\", fill: \"#eee\" } }}\n          labelComponent={<VictoryTooltip style={{ fontSize: 11 }} />} // TODO set position\n          labels={() => \"average expected lifetime\\nfor somebody aged \" + this.props.currentAge + \":\\n\" + formatAge(this.props.mean) + \" years\"}\n          />\n      </VictoryChart>\n      );\n  }\n}\n\nclass LineFlyout extends React.Component {\n  render() {\n    const {x, y} = this.props;\n    // model after https://github.com/FormidableLabs/victory/blob/master/packages/victory-tooltip/src/flyout.js#L27\n//    const {width, height} = this.props;\n    const width = 220;\n    const height = 50;\n    return (\n      <g>\n        <rect x={x-0.5} y={y+10} width=\"1\" height={Math.max(0, 250-y-10)} fill=\"black\" />\n        <circle cx={x} cy={y+10} r=\"2\" fill=\"black\"/>\n        <rect x={x-width/2} y={y-45-height/2} width={width} height={height} stroke=\"black\" fill=\"white\" />\n      </g>\n    );\n  }\n}\n\nclass Skellie extends React.Component {\n  constructor() {\n    super();\n    this.state = { dead: Math.random() >= 0.5 };\n  }\n\n  render() {\n    return (<img className=\"skellie\" alt=\"a graphic reminder of your mortality\" title=\"what do you expect?\" src={this.state.dead + \".png\"} onClick={() => this.setState({ dead: !this.state.dead }) } />);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Expectations from './Expectations';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(<Expectations />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}