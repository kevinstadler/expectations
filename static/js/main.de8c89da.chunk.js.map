{"version":3,"sources":["Expectations.js","serviceWorker.js","index.js"],"names":["sexOptions","value","label","formatAge","age","Math","round","formatPercent","p","resolution","Expectations","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setCountry","state","country","updateDistribution","stateUpdate","updatedState","objectSpread","ps","tableCache","findIndex","el","sex","slice","meanAtBirth","map","i","reduce","a","b","totalremainingdensity","reverse","maxAge","length","v","mean","distribution","description","killedOff","setState","window","location","hash","setAge","event","localStorage","setItem","setSex","fetch","then","response","ok","headers","get","startsWith","text","console","log","string","split","parseFloat","cacheAddition","hideModal","showModal","getItem","args","substring","parseInt","isNaN","react_default","createElement","Modal","isOpen","Expectations_Skellie","AgeInput","onChange","class","Button","color","onClick","className","Expectations_ExpectationsGraph","currentAge","SexInput","Expectations_CountrySelect","href","src","alt","title","React","Component","options","Array","apply","Number","react_select_browser_esm","isClearable","find","CountrySelect","_this2","json","countries","_this3","placeholder","ExpectationsGraph","_this4","survivedData","x","y","outlived","remaningData","cumulative","cs","next","push","total","deathData","c","meanP","floor","ceil","meanData","labelComponent","victory_tooltip","dy","datum","flyoutComponent","Expectations_LineFlyout","victory_label","style","fontSize","flyoutStyle","fill","deathStyle","data","stroke","strokeWidth","victory_chart","minDomain","containerComponent","victory_voronoi_container","victory_axis","axis","dependentAxis","tickLabels","victory_line","labels","victory_area","LineFlyout","_this$props","width","height","max","cx","cy","r","Skellie","_this5","dead","random","_this6","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_Expectations","document","getElementById","URL","process","origin","addEventListener","concat","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de8c89da.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Button, Modal } from 'reactstrap';\n\nimport Select from 'react-select'\n\nimport { VictoryArea, VictoryAxis, VictoryChart, VictoryLabel, VictoryLine, VictoryTooltip, VictoryVoronoiContainer} from 'victory';\n\nimport './App.css';\n\n// data:\n// great quality (full tables) but only 40 countries: https://www.mortality.org/\n// world bank csv, life expectancy at birth 1960-2016 as CSV: https://data.worldbank.org/indicator/sp.dyn.le00.in\n// gapminder, life expectancy at birth 1800-2016/8 as CSV (full country name): https://www.gapminder.org/data/\n// WHO life expectancy and life tables: http://apps.who.int/gho/data/node.main.686?lang=en\n//  * life expectancy (by region and sex only): http://apps.who.int/gho/data/view.main.SDG2016LEXREGv?lang=en\n//  * life tables (per country): http://apps.who.int/gho/data/node.main.LIFECOUNTRY?lang=en (get \"CSV - table\" file)\n// UN life expectancy at birth 1950-2100 (per gender): http://data.un.org/Search.aspx?q=life+expectancy\n// ourworldindata.org nice combination of UN above and Clio-Infra til 1949, but no gender: https://ourworldindata.org/grapher/life-expectancy (click 'data')\n// clio-infra (life expectancy at birth by gender and country but only ever 10ish years): https://clio-infra.eu/Indicators/FemalelifeExpectancyatBirth.html\n// under the assumption: http://www.lifeexpectancy.org/lifetable.shtml\n\nconst sexOptions = [ { value: 'F', label: 'female' }, { value: 'M', label: 'male' } ];\n\nfunction formatAge(age) {\n  return Math.round(10 * age) / 10;\n}\n\nfunction formatPercent(p) {\n  var resolution = 10;\n  if (p < .001) {\n    return \"< 0.01%\";\n  } else if (p > .9999) {\n    return \"> 99.99%\";\n  } else if (p < .01 || p > .99) {\n    resolution = 100;\n  }\n  return Math.round(100 * resolution * p) / resolution + \"%\";\n}\n\n\nclass Expectations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var age = localStorage.getItem('age');\n    var sex = localStorage.getItem('sex');\n    var country = localStorage.getItem('country');\n\n    if (window.location.hash.length) {\n      const args = window.location.hash.substring(1).split('/');\n      if (args.length == 3) {\n        age = args[0];\n        sex = args[1];\n        country = args[2];\n      }\n    }\n\n    age = parseInt(age);\n\n    // TODO move to \n    this.state = {\n      tableCache: {},\n      age: isNaN(age) ? 25 : age,\n      sex: sex || 0,\n      country: country || 'world',\n      showModal: window.location.hash.length == 0,\n      mean: 0 // avoid error on first render\n    };\n  }\n\n  componentDidMount = () => {\n    this.setCountry({ value: this.state.country });\n  }\n\n  updateDistribution = (stateUpdate) => {\n    let updatedState = {...this.state, ...stateUpdate};\n    var countryData = updatedState.tableCache[updatedState.country];\n    const sexIndex = sexOptions.findIndex((el) => el.value === updatedState.sex) + 1 || 0;\n    var ps = countryData[sexIndex].slice();\n    var meanAtBirth = formatAge(ps.map((p, i) => p * i).reduce((a, b) => a + b));\n\n    var totalremainingdensity = ps.slice(updatedState.age).reduce((a, b) => a + b);\n\n    // find last non-zero death probability\n    ps.reverse();\n    const maxAge = ps.length - 1 - ps.findIndex(v => v != 0)\n    ps.reverse();\n    if (totalremainingdensity == 0) {\n    // limit age to highest category of distribution\n      updatedState.age = maxAge;\n      totalremainingdensity = ps.slice(updatedState.age).reduce((a, b) => a + b);\n    }\n\n    // weighted mean of years still to be lived\n    var mean = ps.slice(updatedState.age).map((p, i) => p * (updatedState.age + i)).reduce((a, b) => a + b);\n    mean = mean / totalremainingdensity;\n\n    var description = \"your demographic group\";\n    updatedState = {...updatedState, ...{\n      distribution: ps,\n      mean: mean,\n      meanAtBirth: meanAtBirth,\n      maxAge: maxAge,\n      description: description,\n      killedOff: ps.slice(0, updatedState.age).reduce((a, b) => a + b, 0) / ps.reduce((a, b) => a + b)\n    }};\n\n    this.setState(updatedState);\n    window.location.hash = '#' + updatedState.age + '/' + (updatedState.sex || '') + '/' + updatedState.country;\n  }\n\n  setAge = (event) => {\n    var age = event.value;\n    this.updateDistribution({ 'age': age });\n    localStorage.setItem('age', age);\n  }\n\n  setSex = (event) => {\n    const sex = event ? event.value : null;\n    this.updateDistribution({ 'sex': sex });\n    localStorage.setItem('sex', sex);\n  }\n\n  setCountry = (event) => {\n    const country = event ? event.value : \"world\";\n    if (!this.state.tableCache[country]) {\n      fetch('data/' + country + '.csv').then((response) => {\n        if (response.ok && response.headers.get('Content-Type').startsWith('text/csv')) {\n          return response.text();\n        } else {\n          console.log(\"Failed to fetch \" + country);\n          // TODO unset country\n        }\n      })\n      .then((string) => {\n        if (string) {\n          var ps = string.split(\"\\n\").map((string) => string.split(' ').map(parseFloat));\n          var cacheAddition = {};\n          cacheAddition[country] = ps;\n          this.updateDistribution({ country: country, tableCache: cacheAddition })\n        }\n      });\n    } else {\n      this.updateDistribution({ country: country });\n    }\n    localStorage.setItem('country', country);\n  }\n\n  hideModal = () => {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.state.showModal}>\n        <Skellie /><Skellie /><Skellie /><Skellie /><Skellie /><Skellie />\n          <h2>how old are you?</h2>\n          <AgeInput value={this.state.age} onChange={this.setAge} />\n          <p class=\"mobile\">NOTE: it looks like you are visiting this website on a touchscreen device. while you will find the website to be just as informative, you will find the website a lot more entertaining to play with if you access it from a computer with a mouse or trackpad instead.</p>\n          <Button color=\"primary\" onClick={this.hideModal}>I'm ready to look death in the eye</Button>\n        </Modal>\n        <div className=\"content\">\n          <header>\n            <Skellie /><Skellie /><Skellie /><Skellie /><Skellie /><Skellie />\n          </header>\n          <p>\n            life expectancy is a demographic measure that is often used to capture the general health and wealth of a population. but what does it mean for <em>you</em> that the average life expectancy for {this.state.description} is {formatAge(this.state.meanAtBirth)} years?\n          </p>\n          <h2>all is not so bad!</h2>\n          <p>\n            while the average life expectancy at birth of your demographic group was {formatAge(this.state.meanAtBirth)}, by managing to stay alive to this day you have already proven that you are not part of the <strong>{formatPercent(this.state.killedOff)}</strong> of people from your population who die before they even reach age {this.state.age}. well done!</p>\n          <p>with the knowledge that you haven't died yet, we can re-calculate your individual life expectancy and find out that it is now actually higher than it was at your birth, namely <strong>{formatAge(this.state.mean)}</strong>&nbsp;years. what a treat.\n          </p>\n          <h2>all is not so good!</h2>\n          <p>\n            while you might <em>on average</em> still have another {formatAge(this.state.mean - this.state.age)} years to live, not everybody lives exactly that long of course. rather, your own personal remaining life span will be randomly drawn from a statistical distribution, of which the average life expectancy is just a very crude measure.</p>\n          <p>\n            to give you a better grasp of how much you should really be fearing for your life and when, please refer to the life expectancy distribution personalised for your circumstances below. enjoy!\n          </p>\n          <ExpectationsGraph currentAge={this.state.age} distribution={this.state.distribution} mean={this.state.mean} />\n          <h3>change demographic features</h3>\n          <div className=\"parameters\">\n            <AgeInput value={this.state.age} maxAge={this.state.maxAge} onChange={this.setAge} />\n            <label className=\"sex\">\n              <SexInput value={this.state.sex} onChange={this.setSex} />\n            </label>\n            <div className=\"country\"><CountrySelect value={this.state.country} onChange={this.setCountry} /></div>\n          </div>\n          <footer>\n            <p>built in 2019 by <a href=\"http://kevinstadler.github.io\">Kevin Stadler</a>, data by the <a href=\"https://www.lifetable.de\">human life table database</a>.</p>\n            <p>realised you can't possibly spend all of your accumulated fortune in this lifetime? send me your money: <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=2JE6FCBYY94LJ\"><img src=\"https://img.shields.io/badge/donate-paypal%20($)-blue.svg\" alt=\"donate US dollars\" title=\"send me your money\" /></a> <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=WKKFFM6D7ZHEE\"><img src=\"https://img.shields.io/badge/donate-paypal%20(%E2%82%AC)-blue.svg\" alt=\"donate euros\" title=\"send me your money\" /></a></p></footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Expectations;\n\nfunction AgeInput (props) {\n  const options = Array.apply(null, { length: props.maxAge || 85 }).map(Number.call, Number).map(i => { return { value: i, label: i }});\n  return (<Select\n    className=\"age\"\n    options={options}\n    onChange={props.onChange}\n    value={options[props.value]}\n    isClearable={false}\n  />);\n}\n\nfunction SexInput (props) {\n  return (<Select\n    className=\"age\"\n    options={sexOptions}\n    onChange={props.onChange}\n    value={ sexOptions.find((el) => el.value === props.value) }\n    isClearable={true}\n  />);\n}\n// style={{ maxWidth: \"10em\" }}\n\nclass CountrySelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { countries: [] };\n  }\n\n  componentDidMount = () => {\n      fetch(\"countries.json\").then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          console.log(\"Failed to fetch countries information\");\n        }\n      }).then((json) => {\n        this.setState({countries: json});\n      }\n    );\n  }\n\n  render() {\n    return (<Select\n      options={this.state.countries}\n      onChange={this.props.onChange}\n      value={this.state.countries.find((el) => el.value === this.props.value)}\n      isClearable={true}\n      placeholder=\"Select country...\"\n      />);\n  }\n}\n\nclass ExpectationsGraph extends React.Component {\n\n  render() {\n    if (!this.props.distribution) {\n      return null;\n    }\n\n    var survivedData = this.props.distribution.slice(0, this.props.currentAge + 1).map((p, i) => { return { x: i, y: p }});\n    const outlived = this.props.distribution.slice(0, this.props.currentAge).reduce((a, b) => a + b);\n\n    var remaningData = this.props.distribution.slice(this.props.currentAge);\n    var cumulative = remaningData.slice(1).reduce((cs, next) => { cs.push(cs[cs.length - 1] + next); return cs }, [ remaningData[0] ]);\n    var total = cumulative[cumulative.length - 1];\n    var deathData = remaningData.map((p, i) => { return { x: this.props.currentAge + i, y: p, c: cumulative[i] / total } });\n\n    var meanP = this.props.distribution[Math.floor(this.props.mean)] +\n      (this.props.mean % 1.0) *\n      (this.props.distribution[Math.ceil(this.props.mean)] - this.props.distribution[Math.floor(this.props.mean)]);\n    // generate lots of points along vertical line to improve voronoi\n    var meanData = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(i => {return { x: this.props.mean, y: meanP * i/10 }});\n\n    var labelComponent = (<VictoryTooltip\n            dy={(datum) => datum.y }\n            flyoutComponent={<LineFlyout />}\n            labelComponent={<VictoryLabel style={{ fontSize: 11 }} />}\n            flyoutStyle={{fill: \"white\"}} />);\n    var deathStyle = { data: { stroke: \"black\", strokeWidth: 1, fill: \"#eee\" } };\n\n    return (\n      <VictoryChart\n        minDomain={{ x: 0, y: 0 }}\n        containerComponent={\n          // use Voronoi Container to enable tooltip on line chart\n          <VictoryVoronoiContainer\n//            style={{  overflow: 'visible' }}}\n            className=\"chart\"\n//            voronoiDimension=\"x\"\n            />\n        // TODO add padding\n        }>\n        <VictoryAxis\n          label=\"age\"\n          style={{ axis: {strokeWidth: 0} }} />\n        <VictoryAxis\n          dependentAxis\n          label=\"probability of dying at that age\"\n//          offsetX={50}\n// TODO fix opacity\n          style={{ axis: {stroke: \"lightgray\", strokeWidth: 1.5}, tickLabels: { fill: \"none\" } }} />\n\n        <VictoryLine\n          data={survivedData}\n          style={{ data: { stroke: \"darkgray\", strokeWidth: 1 } }}\n          labelComponent={<VictoryTooltip\n            dy={(datum) => datum.y+10 }\n            flyoutComponent={<LineFlyout />}\n            style={{ fontSize: 11 }} />} // TODO set position\n          labels={(datum) => \"you didn't die when you were \" + datum.x + \",\\nunlike \" + formatPercent(datum.y) + \" of other people\\nfrom your cohort. well done!\"}\n          />\n\n        <VictoryArea\n          data={deathData}\n          style={deathStyle}\n          labelComponent={labelComponent}\n          labels={(datum) => \"probability that you will\\ndie before you turn \" + (datum.x + 1) + \":\\n\" + formatPercent(datum.c) }\n          />\n        <VictoryLine\n          data={[ {x: this.props.currentAge, y: 0 } , deathData[0]]}\n          style={deathStyle}\n          labelComponent={labelComponent} // TODO fix label position\n          labels={() => \"you are \" + this.props.currentAge + \" now (unlike the \" + formatPercent(outlived) +  \" of your\\ncohort who have already died).\\nprobability that you will die this year: \" + formatPercent(deathData[0].y)}\n          />\n\n        <VictoryLine\n          data={meanData}\n          style={{ data: { strokeWidth: 1, stroke: \"red\", fill: \"#eee\" } }}\n          labelComponent={<VictoryTooltip style={{ fontSize: 11 }} />} // TODO set position\n          labels={() => \"average expected lifetime\\nfor somebody aged \" + this.props.currentAge + \":\\n\" + formatAge(this.props.mean) + \" years\"}\n          />\n      </VictoryChart>\n      );\n  }\n}\n\nclass LineFlyout extends React.Component {\n  render() {\n    const {x, y} = this.props;\n    // model after https://github.com/FormidableLabs/victory/blob/master/packages/victory-tooltip/src/flyout.js#L27\n//    const {width, height} = this.props;\n    const width = 220;\n    const height = 50;\n    return (\n      <g>\n        <rect x={x-0.5} y={y+10} width=\"1\" height={Math.max(0, 250-y-10)} fill=\"black\" />\n        <circle cx={x} cy={y+10} r=\"2\" fill=\"black\"/>\n        <rect x={x-width/2} y={y-45-height/2} width={width} height={height} stroke=\"black\" fill=\"white\" />\n      </g>\n    );\n  }\n}\n\nclass Skellie extends React.Component {\n  constructor() {\n    super();\n    this.state = { dead: Math.random() >= 0.5 };\n  }\n\n  render() {\n    return (<img className=\"skellie\" alt=\"a graphic reminder of your mortality\" title=\"what do you expect?\" src={this.state.dead + \".png\"} onClick={() => this.setState({ dead: !this.state.dead }) } />);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Expectations from './Expectations';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Expectations />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}